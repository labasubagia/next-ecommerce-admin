generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String      @id @default(uuid()) @map("id")
  name       String      @map("name")
  userId     String      @map("user_id")
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[]  @relation("StoreToCategory")
  sizes      Size[]      @relation("StoreToSize")
  colors     Color[]     @relation("StoreToColor")
  products   Product[]   @relation("StoreToProduct")

  @@map("stores")
}

model Billboard {
  id         String     @id @default(uuid()) @map("id")
  label      String     @map("label")
  imageUrl   String     @map("image_url")
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  storeId    String     @map("store_id")
  store      Store      @relation("StoreToBillboard", fields: [storeId], references: [id])
  categories Category[] @relation("BillboardToCategory")

  @@index([storeId])
  @@map("billboards")
}

model Category {
  id          String    @id @default(uuid()) @map("id")
  name        String    @map("name")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  storeId     String    @map("store_id")
  store       Store     @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String    @map("billboard_id")
  billboard   Billboard @relation("BillboardToCategory", fields: [billboardId], references: [id])
  products    Product[] @relation("CategoryToProduct")

  @@index([storeId])
  @@index([billboardId])
  @@map("categories")
}

model Size {
  id        String    @id @default(uuid()) @map("id")
  name      String    @map("name")
  value     String    @map("value")
  storeId   String    @map("store_id")
  store     Store     @relation("StoreToSize", fields: [storeId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  products  Product[] @relation("SizeToProduct")

  @@index([storeId])
  @@map("sizes")
}

model Color {
  id        String    @id @default(uuid()) @map("id")
  name      String    @map("name")
  value     String    @map("value")
  storeId   String    @map("store_id")
  store     Store     @relation("StoreToColor", fields: [storeId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  products  Product[] @relation("ColorToProduct")

  @@index([storeId])
  @@map("colors")
}

model Product {
  id         String         @id @default(uuid()) @map("id")
  name       String         @map("name")
  price      Decimal        @map("price")
  isFeatured Boolean        @map("is_featured")
  isArchived Boolean        @map("is_archived")
  storeId    String         @map("store_id")
  store      Store          @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId String         @map("category_id")
  category   Category       @relation("CategoryToProduct", fields: [categoryId], references: [id])
  sizeId     String         @map("size_id")
  size       Size           @relation("SizeToProduct", fields: [sizeId], references: [id])
  colorId    String         @map("color_id")
  color      Color          @relation("ColorToProduct", fields: [colorId], references: [id])
  images     ProductImage[] @relation("ProductToImage")
  createdAt  DateTime       @default(now()) @map("created_at")
  updatedAt  DateTime       @updatedAt @map("updated_at")

  @@index([storeId])
  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
  @@map("products")
}

model ProductImage {
  id        String   @id @default(uuid())
  productId String   @map("product_id")
  product   Product  @relation("ProductToImage", fields: [productId], references: [id], onDelete: Cascade)
  url       String   @map("url")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([productId])
  @@map("product_images")
}
